<script>
  var modal = document.getElementById("imageModal");
  var modalImg = document.getElementById("modalImage");

  // Modal Image Gallery
  function openModal(imgSrc) {
    modal.style.display = "flex";
    modalImg.src = imgSrc;
    setTimeout(() => {
      modal.style.opacity = "1";
    }, 10);
  }

  function closeModal() {
    modal.style.opacity = "0";
    setTimeout(() => {
      modal.style.display = "none";
    }, 300);
  }

  window.onclick = function (event) {
    if (event.target == modal) {
      closeModal();
    }
  };

  document.addEventListener("keydown", function (event) {
    if (event.key === "Escape") {
      closeModal();
    }
  });

  document.querySelectorAll(".custom-copy-button").forEach((button) => {
    const originalIcon = button.querySelector("sl-icon");
    const originalText = button.textContent;

    button.addEventListener("click", async () => {
      const textToCopy = button.dataset.value;
      await navigator.clipboard.writeText(textToCopy);

      button.classList.add("copy-success");
      originalIcon.setAttribute("name", "clipboard-check");
      button.textContent = " Copied!";
      button.insertBefore(originalIcon, button.firstChild);

      setTimeout(() => {
        button.classList.remove("copy-success");
        originalIcon.setAttribute("name", "clipboard");
        button.textContent = originalText;
        button.insertBefore(originalIcon, button.firstChild);
      }, 2000);
    });
  });

  document.addEventListener("DOMContentLoaded", () => {
    const themeToggle = document.getElementById("theme-toggle");
    const searchInput = document.getElementById("searchInput");

    // Theme toggle functionality
    const setTheme = (isDark) => {
      document.body.classList.toggle("dark-mode", isDark);
      document.documentElement.classList.toggle("sl-theme-dark", isDark);
      localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    // Initialize theme based on localStorage or system preference
    const prefersDark = window.matchMedia(
      "(prefers-color-scheme: dark)"
    ).matches;
    const savedTheme = localStorage.getItem("theme");
    const initialTheme = savedTheme ? savedTheme === "dark" : prefersDark;

    themeToggle.checked = initialTheme;
    setTheme(initialTheme);

    // Listen for theme toggle changes
    themeToggle.addEventListener("sl-change", (e) => {
      setTheme(e.target.checked);
    });

    // Search functionality
    const filterAssets = () => {
      const filter = searchInput.value.toLowerCase();
      document.querySelectorAll(".asset-item").forEach((item) => {
        const assetName = item.getAttribute("data-name");
        item.style.display = assetName.includes(filter) ? "" : "none";
      });
    };

    // Listen for input changes in the search field
    searchInput.addEventListener("sl-input", filterAssets);

    // Also listen for the 'clear' event on the sl-input
    searchInput.addEventListener("sl-clear", filterAssets);
  });
</script>
<script
  type="module"
  src="https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.16.0/cdn/shoelace-autoloader.js"
></script>
<script async defer src="https://buttons.github.io/buttons.js"></script>
